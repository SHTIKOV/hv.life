version: '3'
networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/28

services:
  nginx:
    container_name: nginx-hv
    image: nginx:stable-alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - .:/var/www/app
      - .docker/nginx/conf.d:/etc/nginx/conf.d
      - .docker/nginx/logs:/var/log/nginx/
    depends_on:
      - php-7.4
      - postgres
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend

  php-7.4:
    container_name: php-hv
    build:
      context: .docker/php-workspace
      dockerfile: Dockerfile
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
        DOCKER_PHP_VERSION: '7.4'
        DOCKER_PHP_ENABLE_XDEBUG: ${DOCKER_PHP_ENABLE_XDEBUG}
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /var/www/app
    environment:
      XDEBUG_CONFIG: "remote_host=192.168.220.1 remote_enable=1 remote_autostart=off  remote_port=9008"
      PHP_IDE_CONFIG: "serverName=hvlife.localhost"
    volumes:
      - .:/var/www/app
      - .docker/php/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "${PHP_7_4_PORT}:9000"
    networks:
      - backend

  postgres:
    image: postgres:12.4-alpine
    container_name: postgres-hv
    volumes:
      - .docker/postgres/data:/var/lib/postgresql/data
      - .docker/postgres/dump:/dump
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend
